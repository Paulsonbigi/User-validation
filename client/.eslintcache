[{"/home/paul/Documents/React-Projects/travesy-redux/client/src/reportWebVitals.js":"1","/home/paul/Documents/React-Projects/travesy-redux/client/src/App.js":"2","/home/paul/Documents/React-Projects/travesy-redux/client/src/index.js":"3","/home/paul/Documents/React-Projects/travesy-redux/client/src/components/Navbar.js":"4","/home/paul/Documents/React-Projects/travesy-redux/client/src/components/ShoppingList.js":"5","/home/paul/Documents/React-Projects/travesy-redux/client/src/reducers/index.js":"6","/home/paul/Documents/React-Projects/travesy-redux/client/src/reducers/itemReducer.js":"7","/home/paul/Documents/React-Projects/travesy-redux/client/src/actions/Types.js":"8","/home/paul/Documents/React-Projects/travesy-redux/client/src/actions/itemActions.js":"9","/home/paul/Documents/React-Projects/travesy-redux/client/src/components/ItemModel.js":"10","/home/paul/Documents/React-Projects/travesy-redux/client/src/store.js":"11","/home/paul/Documents/React-Projects/travesy-redux/client/src/reducers/errorReducer.js":"12","/home/paul/Documents/React-Projects/travesy-redux/client/src/reducers/authReducers.js":"13","/home/paul/Documents/React-Projects/travesy-redux/client/src/actions/errorActions.js":"14","/home/paul/Documents/React-Projects/travesy-redux/client/src/actions/authActions.js":"15","/home/paul/Documents/React-Projects/travesy-redux/client/src/components/auth/RegisterModal.js":"16","/home/paul/Documents/React-Projects/travesy-redux/client/src/components/auth/LoginModal.js":"17","/home/paul/Documents/React-Projects/travesy-redux/client/src/components/auth/Logout.js":"18"},{"size":362,"mtime":1609976533179,"results":"19","hashOfConfig":"20"},{"size":715,"mtime":1610354477345,"results":"21","hashOfConfig":"20"},{"size":478,"mtime":1609995454269,"results":"22","hashOfConfig":"20"},{"size":1763,"mtime":1610813507032,"results":"23","hashOfConfig":"20"},{"size":1658,"mtime":1610352113824,"results":"24","hashOfConfig":"20"},{"size":269,"mtime":1610156004802,"results":"25","hashOfConfig":"20"},{"size":975,"mtime":1610352247993,"results":"26","hashOfConfig":"20"},{"size":591,"mtime":1610156373784,"results":"27","hashOfConfig":"20"},{"size":953,"mtime":1610330517302,"results":"28","hashOfConfig":"20"},{"size":2330,"mtime":1610328261825,"results":"29","hashOfConfig":"20"},{"size":386,"mtime":1610036500425,"results":"30","hashOfConfig":"31"},{"size":589,"mtime":1610519631812,"results":"32","hashOfConfig":"20"},{"size":1401,"mtime":1610355016552,"results":"33","hashOfConfig":"20"},{"size":308,"mtime":1610328049524,"results":"34","hashOfConfig":"20"},{"size":2542,"mtime":1610799053836,"results":"35","hashOfConfig":"20"},{"size":4464,"mtime":1610803777296,"results":"36","hashOfConfig":"20"},{"size":4005,"mtime":1610813601172,"results":"37","hashOfConfig":"20"},{"size":548,"mtime":1610811827872,"results":"38","hashOfConfig":"20"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},"oix05z",{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"47","messages":"48","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},"1wkd6by",{"filePath":"67","messages":"68","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"76","messages":"77","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"79"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/paul/Documents/React-Projects/travesy-redux/client/src/reportWebVitals.js",[],["84","85"],"/home/paul/Documents/React-Projects/travesy-redux/client/src/App.js",[],["86","87"],"/home/paul/Documents/React-Projects/travesy-redux/client/src/index.js",[],"/home/paul/Documents/React-Projects/travesy-redux/client/src/components/Navbar.js",["88"],"import React, { useState, Fragment } from \"react\"\nimport {\n    Collapse,\n    Navbar,\n    NavbarToggler,\n    NavbarBrand,\n    Nav,\n    NavItem,\n    NavLink,\n    Container\n} from \"reactstrap\"\nimport RegisterModal from \"./auth/RegisterModal\"\nimport LoginModal from \"./auth/LoginModal\"\nimport Logout from \"./auth/Logout\"\nimport  { connect } from \"react-redux\"\n\n\nconst NavBar = (props) => {\n    const { isAuthenticated, user } = props.auth\n    const [isOpen, setIsOpen] = useState(false)\n\n    const toggle = () => setIsOpen(!isOpen)\n    const guestLinks = (\n        <Fragment>\n            <NavItem>\n                <RegisterModal/>\n            </NavItem>\n            <NavItem>\n                <LoginModal/>\n            </NavItem>\n        </Fragment>\n    )\n    const authLinks = (\n        <Fragment>\n            <NavItem>\n                <span className=\"navbar-text mr-3\">\n                    <strong>{user ? `Welcome ${user.name}` : \"\"}</strong>\n                </span>\n            </NavItem>\n            <NavItem>\n                <Logout/>\n            </NavItem>\n        </Fragment>\n    )\n    return (\n        <div>\n            <Navbar color=\"dark\" dark expand=\"sm\" className=\"mb-5\">\n                <Container>\n                    <NavbarBrand href=\"/\">ShoppingList</NavbarBrand>\n                    <NavbarToggler onClick={toggle}/>\n                    <Collapse isOpen={isOpen} navbar>\n                        <Nav className=\"ml-auto\" navbar>\n                            {isAuthenticated ? authLinks : guestLinks}\n                        </Nav>\n                    </Collapse>\n                </Container>\n            </Navbar>\n        </div>\n    )\n}\n\nconst mapStateToProps = state => ({\n    auth: state.auth\n})\nexport default connect(mapStateToProps, {})(NavBar)","/home/paul/Documents/React-Projects/travesy-redux/client/src/components/ShoppingList.js",["89","90"],"/home/paul/Documents/React-Projects/travesy-redux/client/src/reducers/index.js",[],["91","92"],"/home/paul/Documents/React-Projects/travesy-redux/client/src/reducers/itemReducer.js",["93"],"import { GET_ITEMS, ADD_ITEM, DELETE_ITEM, ITEMS_LOADING } from \"../actions/Types\"\nconst initialState = {\n    items: [],\n    loading: false\n}\n\nexport default function(state = initialState, action) {\n    switch (action.type) {\n        case GET_ITEMS:\n            console.log(action.payload)\n            return {\n                ...state,\n                items: action.payload,\n                loading: false\n            }\n        case DELETE_ITEM: \n        console.log(\"deleted\")\n            return {\n                ...state,\n                items: state.items.filter (item => item._id !== action.payload)\n            }\n        case ADD_ITEM: \n        console.log(\"added\")\n            return {\n                ...state,\n                items: [ action.payload, ...state.items]\n            }\n        case ITEMS_LOADING: \n            return {\n                ...state,\n                loading: true\n            }\n        default: {\n            return state;\n        }\n    }\n}\n\n","/home/paul/Documents/React-Projects/travesy-redux/client/src/actions/Types.js",[],"/home/paul/Documents/React-Projects/travesy-redux/client/src/actions/itemActions.js",[],"/home/paul/Documents/React-Projects/travesy-redux/client/src/components/ItemModel.js",["94"],"/home/paul/Documents/React-Projects/travesy-redux/client/src/store.js",[],["95","96"],"/home/paul/Documents/React-Projects/travesy-redux/client/src/reducers/errorReducer.js",["97"],"import { GET_ERRORS, CLEAR_ERRORS} from \"../actions/Types\"\n\nconst initialState ={\n    msg: {},\n    status: null,\n    id: null\n}\n\nexport default function (state = initialState, action){\n    switch(action.type) {\n        case GET_ERRORS: \n            return {\n                msg: action.payload.msg,\n                status: action.payload.status,\n                id: action.payload.id\n            }\n        case CLEAR_ERRORS:\n            return{\n                msg: {},\n                status: null,\n                id: null\n            }\n        default: \n            return state\n    }\n}","/home/paul/Documents/React-Projects/travesy-redux/client/src/reducers/authReducers.js",["98","99","100"],"/home/paul/Documents/React-Projects/travesy-redux/client/src/actions/errorActions.js",[],"/home/paul/Documents/React-Projects/travesy-redux/client/src/actions/authActions.js",[],"/home/paul/Documents/React-Projects/travesy-redux/client/src/components/auth/RegisterModal.js",["101","102","103"],"import React, { useState, useEffect } from 'react'\nimport {\n    Form,\n    Button,\n    Modal,\n    ModalHeader,\n    ModalBody,\n    FormGroup,\n    Label,\n    Input,\n    NavLink,\n    Alert\n} from \"reactstrap\"\nimport { connect } from \"react-redux\"\nimport PropTypes from \"prop-types\"\nimport { register } from \"../../actions/authActions\"\nimport { clearErrors } from \"../../actions/errorActions\"\nfunction RegisterModel(props) {\n\n    const [modal, setModal] = useState(false)\n    const [formData, setFormData] = useState({\n        name: \"\",\n        email: \"\",\n        password: \"\"\n      });\n      const [msg, setMsg] = useState(null)\n      const { name, email, password } = formData;\n    \n\n    const toggle = () => {\n        props.clearErrors()\n        setModal(!modal)\n    }\n\n    useEffect((prevProps) => {\n        console.log(props)\n        // const { error } = props.error\n        // if(error !== prevProps.error) {\n        //     // check for register error\n        //     if(error.id === \"REGISTER_FAIL\"){\n        //         setMsg({ msg: error.msg.msg})\n        //     }else {\n        //         setMsg({ msg: null})\n        //     }\n        // }\n    }, [])\n    const onChange = e => {\n        setFormData({\n          ...formData,\n          [e.target.name]: e.target.value\n        });\n      };\n\n      const onSubmit = async e => {\n        e.preventDefault();\n    \n        const newUser = {\n            name, email, password\n        }\n          props.register({ name, email, password});\n\n        toggle()\n      };\n\n    return (\n        <div>\n            <NavLink onClick={toggle} href=\"#\">Register</NavLink>\n            <Modal\n                isOpen={modal}\n                toggle={toggle}>\n                    <ModalHeader\n                        toggle={toggle}\n                        >\n                            Register\n                    </ModalHeader>\n                    <ModalBody>\n                        { msg ? <Alert color=\"danger\"> {msg}</Alert> : null} \n                        <Form\n                            onSubmit={onSubmit}>\n                                <FormGroup>\n                                    <Label for=\"name\">Name</Label>\n                                    <Input\n                                        name=\"name\"\n                                        type=\"text\"\n                                        id=\"name\"\n                                        value={name}\n                                        placeholder=\"name\"\n                                        className=\"mb-3\"\n                                        onChange={(e)=> onChange(e)}/>\n                                    <Label for=\"email\">Email</Label>\n                                    <Input\n                                        type=\"email\"\n                                        placeholder=\"Email Address\"\n                                        className=\"mb-3\"\n                                        name=\"email\"\n                                        value={email}\n                                        onChange={e => onChange(e)}\n                                        required\n                                    />\n                                    <Label for=\"password\">Password</Label>\n                                    <Input\n                                        name=\"password\"\n                                        type=\"password\"\n                                        id=\"password\"\n                                        value={password}\n                                        className=\"mb-3\"\n                                        placeholder=\"Password\"\n                                        onChange={e => onChange(e)}/>\n                                    <Button\n                                        color=\"dark\"\n                                        style={{marginTop:\"2rem\"}}\n                                        block>Register</Button>\n                                </FormGroup>\n                            </Form>\n                    </ModalBody>\n            </Modal>            \n        </div>\n    )\n}\nRegisterModel.prototypes = {\n    isAuthenticated: PropTypes.bool,\n    error: PropTypes.object.isRequired,\n    register: PropTypes.func.isRequired,\n    clearErrors: PropTypes.func.isRequired\n}\n\nconst mapSatetToProps = state => ({\n    isAuthenticated: state.auth.isAuthenticated,\n    error: state.error\n})\nexport default connect(mapSatetToProps, { register, clearErrors }) (RegisterModel)\n",["104","105"],"/home/paul/Documents/React-Projects/travesy-redux/client/src/components/auth/LoginModal.js",["106","107","108"],"/home/paul/Documents/React-Projects/travesy-redux/client/src/components/auth/Logout.js",[],{"ruleId":"109","replacedBy":"110"},{"ruleId":"111","replacedBy":"112"},{"ruleId":"109","replacedBy":"113"},{"ruleId":"111","replacedBy":"114"},{"ruleId":"115","severity":1,"message":"116","line":9,"column":5,"nodeType":"117","messageId":"118","endLine":9,"endColumn":12},{"ruleId":"115","severity":1,"message":"119","line":10,"column":19,"nodeType":"117","messageId":"118","endLine":10,"endColumn":27},{"ruleId":"120","severity":1,"message":"121","line":14,"column":8,"nodeType":"122","endLine":14,"endColumn":10,"suggestions":"123"},{"ruleId":"109","replacedBy":"124"},{"ruleId":"111","replacedBy":"125"},{"ruleId":"126","severity":1,"message":"127","line":7,"column":1,"nodeType":"128","endLine":37,"endColumn":2},{"ruleId":"115","severity":1,"message":"129","line":13,"column":16,"nodeType":"117","messageId":"118","endLine":13,"endColumn":22},{"ruleId":"109","replacedBy":"130"},{"ruleId":"111","replacedBy":"131"},{"ruleId":"126","severity":1,"message":"127","line":9,"column":1,"nodeType":"128","endLine":26,"endColumn":2},{"ruleId":"115","severity":1,"message":"132","line":6,"column":5,"nodeType":"117","messageId":"118","endLine":6,"endColumn":15},{"ruleId":"126","severity":1,"message":"127","line":20,"column":1,"nodeType":"128","endLine":58,"endColumn":2},{"ruleId":"133","severity":1,"message":"134","line":44,"column":9,"nodeType":"135","messageId":"136","endLine":44,"endColumn":28},{"ruleId":"115","severity":1,"message":"137","line":26,"column":19,"nodeType":"117","messageId":"118","endLine":26,"endColumn":25},{"ruleId":"120","severity":1,"message":"138","line":46,"column":8,"nodeType":"122","endLine":46,"endColumn":10,"suggestions":"139"},{"ruleId":"115","severity":1,"message":"140","line":57,"column":15,"nodeType":"117","messageId":"118","endLine":57,"endColumn":22},{"ruleId":"109","replacedBy":"141"},{"ruleId":"111","replacedBy":"142"},{"ruleId":"115","severity":1,"message":"143","line":1,"column":27,"nodeType":"117","messageId":"118","endLine":1,"endColumn":36},{"ruleId":"115","severity":1,"message":"137","line":26,"column":19,"nodeType":"117","messageId":"118","endLine":26,"endColumn":25},{"ruleId":"115","severity":1,"message":"144","line":27,"column":15,"nodeType":"117","messageId":"118","endLine":27,"endColumn":19},"no-native-reassign",["145"],"no-negated-in-lhs",["146"],["145"],["146"],"no-unused-vars","'NavLink' is defined but never used.","Identifier","unusedVar","'setItems' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'props'. Either include it or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.","ArrayExpression",["147"],["145"],["146"],"import/no-anonymous-default-export","Unexpected default export of anonymous function","ExportDefaultDeclaration","'uuidv4' is defined but never used.",["145"],["146"],"'LOGIN_FAIL' is defined but never used.","no-duplicate-case","Duplicate case label.","SwitchCase","unexpected","'setMsg' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'props'. Either include it or remove the dependency array.",["148"],"'newUser' is assigned a value but never used.",["145"],["146"],"'useEffect' is defined but never used.","'name' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"149","fix":"150"},{"desc":"149","fix":"151"},"Update the dependencies array to be: [props]",{"range":"152","text":"153"},{"range":"154","text":"153"},[474,476],"[props]",[1151,1153]]